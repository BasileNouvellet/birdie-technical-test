// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Row component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Row
    averageAge={1000}
    count={1000}
    index={1000}
    isTitle={false}
    variable="education"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="cell index"
        >
          1000
        </div>,
        <div
          className="cell variable"
        >
          education
        </div>,
        <div
          className="cell count"
        >
          1000
        </div>,
        <div
          className="cell averageAge"
        >
          1000
        </div>,
      ],
      "className": "row",
      "style": Object {
        "backgroundColor": null,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 1000,
          "className": "cell index",
        },
        "ref": null,
        "rendered": 1000,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "education",
          "className": "cell variable",
        },
        "ref": null,
        "rendered": "education",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 1000,
          "className": "cell count",
        },
        "ref": null,
        "rendered": 1000,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 1000,
          "className": "cell averageAge",
        },
        "ref": null,
        "rendered": 1000,
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="cell index"
          >
            1000
          </div>,
          <div
            className="cell variable"
          >
            education
          </div>,
          <div
            className="cell count"
          >
            1000
          </div>,
          <div
            className="cell averageAge"
          >
            1000
          </div>,
        ],
        "className": "row",
        "style": Object {
          "backgroundColor": null,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 1000,
            "className": "cell index",
          },
          "ref": null,
          "rendered": 1000,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "education",
            "className": "cell variable",
          },
          "ref": null,
          "rendered": "education",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 1000,
            "className": "cell count",
          },
          "ref": null,
          "rendered": 1000,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 1000,
            "className": "cell averageAge",
          },
          "ref": null,
          "rendered": 1000,
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
